---
import { count, sql } from "drizzle-orm";
import { db } from "../db";
import { users } from "../db/schema";
import Layout from "../layouts/Layout.astro";

const pageParams = Astro.url.searchParams.get("page");

const pageNumber = Number(Astro.url.searchParams.get("page") ?? 1);

const numberOfItems = 7;

const totalUsers = await db
  .select({ count: sql<number>`count(*)` })
  .from(users);

const numberOfPages = Math.ceil(totalUsers[0].count / numberOfItems);

let safePageNumber = 1;

if (pageNumber < 1) {
  Astro.redirect("/ssr");
} else if (pageNumber > numberOfPages) {
  Astro.redirect("/ssr");
} else {
  safePageNumber = pageNumber;
}

const offsetItems =
  safePageNumber > 1 ? (safePageNumber - 1) * numberOfItems : 0;

const allUsers = await db.query.users.findMany({
  limit: numberOfItems,
  offset: offsetItems,
});
console.log(allUsers);

const prevSearchParams = new URLSearchParams();
const nextSearchParams = new URLSearchParams();

if (safePageNumber > 2) {
  prevSearchParams.set("page", `${safePageNumber - 1}`);
} else {
  prevSearchParams.delete("page");
}

if (safePageNumber > 0) {
  if (safePageNumber === numberOfPages) {
    nextSearchParams.set("page", `${numberOfPages}`);
  } else {
    nextSearchParams.set("page", `${safePageNumber + 1}`);
  }
} else {
  nextSearchParams.delete("page");
}
---

<Layout title="SSR">
  <main class="max-w-7xl my-5 mx-auto px-3">
    <h2 class="text-center text-2xl font-bold my-5">Users</h2>
    <div class="relative overflow-hidden">
      <table
        class="border-2 rounded-xl border-slate-700 table-fixed w-full text-sm"
      >
        <thead>
          <tr>
            <th
              class="border-b-2 border-slate-700 font-medium p-4 pl-8 pb-3 text-left"
            >
              ID
            </th>
            <th
              class="border-b-2 border-slate-700 font-medium p-4 pl-8 pb-3 text-left"
            >
              Name
            </th>
            <th
              class="border-b-2 border-slate-700 font-medium p-4 pl-8 pb-3 text-left"
            >
              Email
            </th>
          </tr>
        </thead>
        <tbody>
          {
            allUsers.map((user) => (
              <tr>
                <td class="border-b border-slate-700  p-4 pl-8  ">{user.id}</td>
                <td class="border-b border-slate-700  p-4 pl-8  ">
                  {user.name}
                </td>
                <td class="border-b border-slate-700  p-4 pl-8  ">
                  {user.email}
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>

    <div class="flex my-5 justify-end items-center gap-5">
      <a
        href={`/ssr?${prevSearchParams}`}
        class={`${
          safePageNumber < 2
            ? "bg-gray-500 cursor-not-allowed"
            : "bg-blue-600 hover:bg-blue-500"
        } px-5 py-2 rounded-md text-white `}
      >
        Previous
      </a>

      <a
        href={`/ssr?${nextSearchParams}`}
        class={`${
          safePageNumber >= numberOfPages
            ? "bg-gray-500 cursor-not-allowed"
            : "bg-blue-600 hover:bg-blue-500"
        } px-5 py-2 rounded-md text-white `}
      >
        Next
      </a>
    </div>
  </main>
</Layout>
